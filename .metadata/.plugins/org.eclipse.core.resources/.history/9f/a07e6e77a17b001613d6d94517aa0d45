
public class Longest_Substring_Without_Repeating_Characters {
	public int lengthOfLongestSubstring(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        
        int left = 0;
        int[] dict = new int[256];
        dict[(int) s.charAt(0)]++;
        int longest = 1;
        for (int i = 1; i < s.length(); i++) {
            if (dict[(int)s.charAt(i)] == 1) {
                longest = Math.max(longest, i - left);
                for (; left < i; left++) {
                    dict[(int) s.charAt(left)]--;
                    if (s.charAt(left) == s.charAt(i)) {
                        break;
                    }
                }
            }
        }
        
        longest = Math.max(longest, s.length() - left);
        
        return longest;
    }
}

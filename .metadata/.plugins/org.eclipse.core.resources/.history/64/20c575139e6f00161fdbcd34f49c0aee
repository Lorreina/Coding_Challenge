import java.util.ArrayList;
import java.util.List;

/**
 * LeetCode
 * 77. Combinations
 * @author lorreina
 *
 */
public class Combinations {
	public static List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ans = new ArrayList<>();
        dfs(ans, new ArrayList<Integer>(), k, 1, n-k+1);
        return ans;
    }

    private static void dfs(List<List<Integer>> ans, List<Integer> list, int kLeft, int from, int to) {
        if (kLeft == 0) { ans.add(new ArrayList<Integer>(list)); return; }
        for (int i=from; i<=to; ++i) {
            list.add(i);
            dfs(ans, list, kLeft-1, i+1, to+1);
            list.remove(list.size()-1);
        }
    }
    
    public static void main(String[] args) {
    	List<List<Integer>> list = combine(5, 3);
    	for (int i = 0; i < list.size(); i++) {
    		List<Integer> tmp = list.get(i);
    		for (int j = 0; j < tmp.size(); j++) {
    			System.out.print(tmp.get(i));
    		}
    	}
    }
}

/**
 * LeetCode
 * 44. Wildcard Matching
 * @author lorreina
 *
 */
public class Wildcard_Matching {
	public boolean isMatch(String s, String p) {
        if (s == null && p == null) {
            return true;
        }
        
        if (p == null || s == null) {
            return false;
        }
        
        char[] parray = p.toCharArray();
        char[] sarray = s.toCharArray();
        
        return helper(sarray, parray, 0, 0);
    }
    
    public boolean helper(char[] s, char[] p, int i, int j) {
        while (i < s.length && j < p.length) {
            
            if (s[i] == p[j] || p[j] == '?') {
                i++;
                j++;
            } else if (p[j] == '*') {
                for (int k = i; k <= s.length; k++) {
                    if (helper(s, p, k, j + 1)) {
                        return true;
                    }
                }
                return false;
            } else {
                return false;
            }
        }

        while (j < p.length) {
            if (p[j] == '*') {
                j++;  
            } else {
        		break;
        	}
        }
        if (i == s.length && j == p.length) {
            return true;
        } else {
            return false;
        }
    }
    
    public static void main(String[] args) {
//    	String p = "aasdf.*asdf.*asdf.*asdf.*s";
//    	String s = "aasdfasdfasdfasdfas";
    	String p = "a*******b";
    	String s = "aaabbbaabaaaaababaabaaabbabbbbbbbbaabababbabbbaaaaba";
    	
    	Wildcard_Matching tmp = new Wildcard_Matching();
    	System.out.println(tmp.isMatch(s, p));
    }
}

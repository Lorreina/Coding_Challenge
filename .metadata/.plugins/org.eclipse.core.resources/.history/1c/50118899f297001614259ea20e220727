/**
 * LeetCode
 * 251. Flatten 2D Vector
 * @author lorreina
 *
 */
public class Flatten_2D_Vector {
	public class Vector2D implements Iterator<Integer> {
	    List<List<Integer>> vec2d;
	    int listPointer;
	    int index;

	    public Vector2D(List<List<Integer>> vec2d) {
	        this.vec2d = vec2d;
	        listPointer = 0;
	        index = 0;
	    }

	    @Override
	    public Integer next() {
	        Integer res = vec2d.get(listPointer).get(index);
	        index += 1;
	        
	        return res;
	    }

	    @Override
	    public boolean hasNext() {
	        if (vec2d == null) {
	            return false;
	        }
	        while (true) {
	            if (listPointer >= vec2d.size()) {
	                break;
	            }
	            List<Integer> list = vec2d.get(listPointer);
	            if (list == null || index >= list.size()) {
	                listPointer += 1;
	                index = 0;
	            } else {
	                return true;
	            }
	        }
	        
	        return false;
	    }
	}

	/**
	 * Your Vector2D object will be instantiated and called as such:
	 * Vector2D i = new Vector2D(vec2d);
	 * while (i.hasNext()) v[f()] = i.next();
	 */
}	

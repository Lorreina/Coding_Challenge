/**
 * LeetCode
 * 327. Count of Range Sum
 * @author lorreina
 *
 */
public class Count_of_Range_Sum {
	// Solution 1: Naive O(n^2) -> TLE
	/*
	public int countRangeSum(int[] nums, int lower, int upper) {
        if (nums == null || nums.length == 0 || lower > upper) {
            return 0;
        }
        long[] dp = new long[nums.length + 1];
        for (int i = 1; i < dp.length; i++) {
            dp[i] = dp[i - 1] + nums[i - 1];
        }
        
        // S(i, j) = dp[j + 1] - dp[i]
        int count = 0;
        for (int i = 0; i < dp.length; i++) {
            for (int j = i + 1; j < dp.length; j++) {
                long diff = dp[j] - dp[i];
                if (diff >= lower && diff <= upper) {
                    count++;
                }
            }
        }
        
        return count;
    }
    */
}
